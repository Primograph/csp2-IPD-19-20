--------------------------------------------------------------------------------
Section 0 - Line up
--------------------------------------------------------------------------------
Player 0 (P0): E0, Random
        Randomly decides wether to collude, betray, or retaliate.
Player 1 (P1): E1, Probability
        Tries to calculate the probability of collusion and betrayl using the hi
        story. Depending on which has a higher chance, it will either collude or
         betray.
Player 2 (P2): E2, Experience-based
        Collude once, Betray four times, then decide to collude/betray based on 
        the results of the past 5 rounds
Player 3 (P3): E3, Collude but retaliate
        Collude first round. Collude, except in a round after getting 
        a severe punishment.
--------------------------------------------------------------------------------
Section 1 - Player vs. Player
--------------------------------------------------------------------------------
Each column shows pts//round earned against each other player:
             P0     P1     P2     P3
vs. P0 :      0   -166   -166   -215
vs. P1 :   -207      0   -150     -2
vs. P2 :   -238   -301      0   -206
vs. P3 :    -70     -2   -196      0
TOTAL  :   -515   -469   -512   -423
--------------------------------------------------------------------------------
Section 2 - Leaderboard
--------------------------------------------------------------------------------
Average points per round:
Team name (P#):  Score      with strategy name
E3        (P3):       -106 points with Collude but retaliate                   
E1        (P1):       -118 points with Probability                             
E2        (P2):       -128 points with Experience-based                        
E0        (P0):       -129 points with Random                                  
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
example0--------------------------------------------------------------------------------
#### so unless i misunderstood something everyhting should b fine
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

import random

team_name = 'E0'
strategy_name = 'Random'
strategy_description = 'Randomly decides wether to collude, betray, or retaliate.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''

    possibilities = [1, 2, 3]
    decision = random.choice(possibilities)
    if decision == 1: #colludes if 1 is chosen
      return 'c'
    elif decision == 2: #betrays if two is chosen
      return 'b'
    else:
      if len(their_history) == 0 and len(my_history) == 0:
        return 'c'
      elif their_history[-1] == 'b' and my_history[-1] == 'c':
        return 'b'
      elif their_history[-1] == 'c' and my_history[-1] == 'c':
        return 'c'
      else:
        return 'b'
--------------------------------------------------------------------------------
example1--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E1'
strategy_name = 'Probability'
strategy_description = 'Tries to calculate the probability of collusion and betrayl using the history. Depending on which has a higher chance, it will either collude or betray.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    import random
    choices = [1, 2]
    descision = random.choice(choices)
    prob_c = 0
    prob_b = 0
    start = False
    
    for move_my, move_their in zip(my_history, their_history):
      if move_my == 'b' and move_their == 'c':
        prob_b += 1
      elif move_my == 'b' and move_their == 'b':
        prob_c += 1
      elif move_my == 'c' and move_their == 'b':
        prob_b += 1
      elif move_my == 'c' and move_their == 'c':
        prob_b += 1
        prob_c += 1
      else:
        start = True
    
    if prob_c > prob_b: #if probability of c is higher, then it will randomly return c or b
      if descision == 1:
        return 'c'
      else:
        return 'b'
    elif prob_c < prob_b: #if probability of b is higher, then it will return b
      return 'b'
    elif start == True: #it will always start with c
      return 'c'--------------------------------------------------------------------------------
example2--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E2'
strategy_name = 'Experience-based'
strategy_description = 'Collude once, Betray four times, then decide to collude/betray based on the results of the past 5 rounds'

start_five = 1

def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    global start_five
    
    if start_five == 1:
      start_five += 1
      return 'c'
    elif start_five > 1 and start_five <= 5:
      start_five += 1
      return 'b'
    elif start_five > 5:
      num_b = 0
      num_c = 0

      for letter in their_history[-5:]: # checks if there are nore c's or b's
        if letter == 'c':
          num_c += 1
        elif letter == 'b':
          num_b += 1
      
      if num_c >= 3: # if there are more c's then it will betray. If there are more b's then it will collude.
        return 'c'
      else:
        return 'b'
--------------------------------------------------------------------------------
example3--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E3'
strategy_name = 'Collude but retaliate'
strategy_description = '''\
Collude first round. Collude, except in a round after getting 
a severe punishment.'''
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    if len(my_history)==0: # It's the first round; collude.
        return 'c'
    elif my_history[-1]=='c' and their_history[-1]=='b':
        return 'b' # Betray if they were severely punished last time,
    else:
        return 'c' # otherwise collude.--------------------------------------------------------------------------------
Section 3 - Game Data for Team E0
--------------------------------------------------------------------------------
-207 pt//round: E0(P0) "Random"
-166 pt//ound: E1(P1) "Probability"
bBbBbCCCCBcbbBbBccbcbcbccbbbbBbBbCCBcbbCCBbCBcbbBcccbbbbBbCCBcbbCCCBbCCCCBccbccb
 cbcbCCCCcBbbcbcBBbBbBbBBbbbbcbcbCCcBbbCCcbCcBbbcBBBbbbbcbCCcBbbCCCcbCCCCcBBbBBb

cccbbbbcbbcbbBcbcbbBcbbBbBcbbBbBbBcbcbccbbccbbbCCCCCCCCCBccbcbbbBbBbCBbCBbBbBbCB
BBBbbbbBbbBbbcBbBbbcBbbcbcBbbcbcbcBbBbBBbbBBbbbCCCCCCCCCcBBbBbbbcbcbCcbCcbcbcbCc

bBccbcccbccbbbcb
bcBBbBBBbBBbbbBb

--------------------------------------------------------------------------------
-238 pt//round: E0(P0) "Random"
-166 pt//ound: E2(P2) "Experience-based"
CbbbbbbbcbbccBbcCBcBBbbbbbbbbbcbbbcbbcbbbbcbbbbbbcbcbbbcbbcbccCCCBBBccbbbbcbcbbb
CbbbbbbbBbbBBcbBCcBccbbbbbbbbbBbbbBbbBbbbbBbbbbbbBbBbbbBbbBbBBCCCcccBBbbbbBbBbbb

bbcbcbbcbccBBbcbbbbbcbcbcCCCCCCBBBbbcbccBCCBBbcbbcbccBCCBBbbcbbcbbbbccbcBCBcBbbb
bbBbBbbBbBBccbBbbbbbBbBbBCCCCCCcccbbBbBBcCCccbBbbBbBBcCCccbbBbbBbbbbBBbBcCcBcbbb

cbbbcbcbbccBbcCBcBBccCBCCCBCBBbcbbbbcbcb
BbbbBbBbbBBcbBCcBccBBCcCCCcCccbBbbbbBbBb

--------------------------------------------------------------------------------
-70 pt//round: E0(P0) "Random"
-215 pt//ound: E3(P3) "Collude but retaliate"
CCCBbCCCBbBbBbCCBcCCCCBbBbBcCBbCBcBbCBbBbBbBbBbCCCCCCBcBbCCBbBbBcCCCCBbCCCCBbCBc
CCCcbCCCcbcbcbCCcBCCCCcbcbcBCcbCcBcbCcbcbcbcbcbCCCCCCcBcbCCcbcbcBCCCCcbCCCCcbCcB

BbBbBcBbBcBbBbCCCCBbBbBcBbCCCCCCCCBbCCCBbBbBbCCCCCBcCCCBbBbBcBbBbCCBbBbBbCBbBbBb
cbcbcBcbcBcbcbCCCCcbcbcBcbCCCCCCCCcbCCCcbcbcbCCCCCcBCCCcbcbcBcbcbCCcbcbcbCcbcbcb

BbBcBbCCCBbBcBcBcC
cbcBcbCCCcbcBcBcBC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E1
--------------------------------------------------------------------------------
-166 pt//round: E1(P1) "Probability"
-207 pt//ound: E0(P0) "Random"
 cbcbCCCCcBbbcbcBBbBbBbBBbbbbcbcbCCcBbbCCcbCcBbbcBBBbbbbcbCCcBbbCCCcbCCCCcBBbBBb
bBbBbCCCCBcbbBbBccbcbcbccbbbbBbBbCCBcbbCCBbCBcbbBcccbbbbBbCCBcbbCCCBbCCCCBccbccb

BBBbbbbBbbBbbcBbBbbcBbbcbcBbbcbcbcBbBbBBbbBBbbbCCCCCCCCCcBBbBbbbcbcbCcbCcbcbcbCc
cccbbbbcbbcbbBcbcbbBcbbBbBcbbBbBbBcbcbccbbccbbbCCCCCCCCCBccbcbbbBbBbCBbCBbBbBbCB

bcBBbBBBbBBbbbBb
bBccbcccbccbbbcb

--------------------------------------------------------------------------------
-301 pt//round: E1(P1) "Probability"
-150 pt//ound: E2(P2) "Experience-based"
 cbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBb
bBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcb

bcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBb
bBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcb

bcbcbcBbbcbcbcBbbcb
bBbBbBcbbBbBbBcbbBb

--------------------------------------------------------------------------------
-2 pt//round: E1(P1) "Probability"
-2 pt//ound: E3(P3) "Collude but retaliate"
 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E2
--------------------------------------------------------------------------------
-166 pt//round: E2(P2) "Experience-based"
-238 pt//ound: E0(P0) "Random"
CbbbbbbbBbbBBcbBCcBccbbbbbbbbbBbbbBbbBbbbbBbbbbbbBbBbbbBbbBbBBCCCcccBBbbbbBbBbbb
CbbbbbbbcbbccBbcCBcBBbbbbbbbbbcbbbcbbcbbbbcbbbbbbcbcbbbcbbcbccCCCBBBccbbbbcbcbbb

bbBbBbbBbBBccbBbbbbbBbBbBCCCCCCcccbbBbBBcCCccbBbbBbBBcCCccbbBbbBbbbbBBbBcCcBcbbb
bbcbcbbcbccBBbcbbbbbcbcbcCCCCCCBBBbbcbccBCCBBbcbbcbccBCCBBbbcbbcbbbbccbcBCBcBbbb

BbbbBbBbbBBcbBCcBccBBCcCCCcCccbBbbbbBbBb
cbbbcbcbbccBbcCBcBBccCBCCCBCBBbcbbbbcbcb

--------------------------------------------------------------------------------
-150 pt//round: E2(P2) "Experience-based"
-301 pt//ound: E1(P1) "Probability"
bBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcb
 cbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBb

bBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcbbBbBbBcb
bcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBbbcbcbcBb

bBbBbBcbbBbBbBcbbBb
bcbcbcBbbcbcbcBbbcb

--------------------------------------------------------------------------------
-196 pt//round: E2(P2) "Experience-based"
-206 pt//ound: E3(P3) "Collude but retaliate"
BbBbBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
cbcbcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcBcB
cBcBcBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E3
--------------------------------------------------------------------------------
-215 pt//round: E3(P3) "Collude but retaliate"
-70 pt//ound: E0(P0) "Random"
CCCcbCCCcbcbcbCCcBCCCCcbcbcBCcbCcBcbCcbcbcbcbcbCCCCCCcBcbCCcbcbcBCCCCcbCCCCcbCcB
CCCBbCCCBbBbBbCCBcCCCCBbBbBcCBbCBcBbCBbBbBbBbBbCCCCCCBcBbCCBbBbBcCCCCBbCCCCBbCBc

cbcbcBcbcBcbcbCCCCcbcbcBcbCCCCCCCCcbCCCcbcbcbCCCCCcBCCCcbcbcBcbcbCCcbcbcbCcbcbcb
BbBbBcBbBcBbBbCCCCBbBbBcBbCCCCCCCCBbCCCBbBbBbCCCCCBcCCCBbBbBcBbBbCCBbBbBbCBbBbBb

cbcBcbCCCcbcBcBcBC
BbBcBbCCCBbBcBcBcC

--------------------------------------------------------------------------------
-2 pt//round: E3(P3) "Collude but retaliate"
-2 pt//ound: E1(P1) "Probability"
cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCC

--------------------------------------------------------------------------------
-206 pt//round: E3(P3) "Collude but retaliate"
-196 pt//ound: E2(P2) "Experience-based"
cbcbcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
BbBbBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBcBc
BcBcBcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
